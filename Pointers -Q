1. Solid rectangle
import java.util.*;

public class Patterns {
public static void main (String args[]) {
//outer loop
     for (int i =1; i<=4; i++){
//Inner loop
        for(int j=1; j<=5;j++){
            System.out.print("*"); 
}
    System.out.println();
      }
   }
}

2. Hollow Rectangle
import java.util.*;
public class Patterns {
//Outer Loop
       for(int i =1; i<=4;i++)
       { //Inner loop
           for(int j =1; j<=5; j++){
                if (i==1 || j==1 || i==4 || j==5){
                    System.out.print("*");
              }else{
                    System.out.print(" ");
               }
           }
           System.out.println();
        }
    }

3. Half Pyramid
{ //Outer Loop
   ...>     for(int i =1; i<=4;i++)
   ...>     { //Inner loop
   ...>         for(int j =1; j<=i; j++){
   ...>
   ...>                 System.out.print("*");
   ...>             }
   
   ...>         System.out.println(); }
}

4. Inverted Half Pyramid
{
for(int i=n; i>=1;i--){
for(int j=1; j<=i;j++)
{
System.out.print("*");
}
System.out.println();
}
}


5. inverted half pyramid 
 {
   ...>     for(int i=1;i<=4;i++){
   ...>         for(int j=4;j>=i;j--){
   ...>             System.out.print(i);
   ...>         }
   ...>         System.out.println();
   ...>     }
   ...> }
1111
222
33
4

6.Rotated Half Pyramid (90Â° Counterclockwise) 
{
   ...>     for(int i =1; i<=4;i++){
   ...>
   ...>             // Inner loop - space print
   ...>                         for(int j=1;j<=4-i;j++){
   ...>
   ...>                             System.out.print(" ");
   ...>                  }
   ...>                 //inner loop - for star print
   ...>
   ...>                     for(int j=1;j<=i;j++){
   ...>                            System.out.print("*");
   ...>                     }
   ...>  System.out.println() ;  }
   ...>
   ...> }
   *
  **
 ***
**** 

7. 1-0 Triangle

{
   ...>
   ...>     for(int i =0;i<=5;i++){
   ...>     for(int j=1;j<=i; j++){
   ...>     if ((i + j) %2 == 0)
   ...>         System.out.print("1");
   ...>     else
   ...>     System.out.print("0");
       }
   ...>     System.out.println(); }
   }
Output:
1
01
101
0101
10101

8. each row starts with the row number and prints consecutive numbers.
 { for(int i=1;i<=5;i++){
   ...>         int num =i;
   ...>             for(int j=1;j<=i;j++){
   ...>             System.out.print(num + " ");
   ...>             num++;
   ...>         }
   ...>         System.out.println();
   ...>     }
   ...> }
1
2 3
3 4 5
4 5 6 7
5 6 7 8 9


9. Print half pyramid  of consecutive numbers 
{ int num = 1; for(int i=1;i<=5;i++){
   ...>
   ...>             for(int j=1;j<=i;j++){
   ...>             System.out.print(num + " ");
   ...>             num++;
   ...>         }
   ...>         System.out.println();
   ...>     }
   ...> }
1
2 3
4 5 6
7 8 9 10
11 12 13 14 15

10:
{
   ...>
   ...>
   ...>     Scanner sc = new Scanner(System.in);
   ...>     int n = sc.nextInt();
   ...>
   ...>     for(int i=0;i<=n;i++){
   ...>         for(char ch = 'A'; ch<= 'A' + i; ch++){
   ...>
   ...>         System.out.print(ch + " ");
   ...>     }  System.out.println();
   ...> }
   ...> } 
Output : 4                //n input
A
A B
A B C
A B C D
A B C D E

11;
> {
   ...>     Scanner sc = new Scanner(System.in);
   ...>     int n = sc.nextInt();
   ...>
   ...>     for(int i=0;i<=n;i++){
   ...>         for(char ch =(char) ('E' - i); ch <='E';ch++){
   ...>             System.out.print(ch + " ");
   ...>         }
   ...>         System.out.println();
   ...>     }
   ...> }
4
E
D E
C D E
B C D E
A B C D E



12)
 {
   ...>     Scanner sc = new Scanner(System.in);
   ...>     int n = sc.nextInt();
   ...>
   ...>     for(int i=0;i<=n;i++){
   ...>         char ch = (char) ('A' + i);
   ...>     for(int j= 0;j<=i;j++){
   ...>             System.out.print(ch + " ");
   ...>         }System.out.println();
   ...>     }
   ...> }
4
A
B B
C C C
D D D D
E E E E E

* 13)
 {
   ...>     Scanner sc = new Scanner(System.in);
   ...>     int n = sc.nextInt();
   ...>
   ...>     for(int i = 0;i<=n;i++){
   ...>         for(int j=0;j<=n-i-1;j++){
   ...>             System.out.print(" ");
   ...>         }
   ...>             char ch = 'A';
   ...>              int breakpoint =(2*i+1)/2;
   ...>         for(int j=1;j<=(2*i+1);j++){
   ...>             System.out.print(ch);
   ...>              //char ch = (char)('A' + i);
   ...>            if(j<=breakpoint)
   ...>             ch++;
   ...>             else
   ...>             ch--;// System.out.print(ch);
   ...>         }
   ...>          for(int j=0;j<=n-i-1;j++){
   ...>              System.out.print(" ");
   ...>         }
   ...>         System.out.println();
   ...>     }
   ...> }
4
    A
   ABA
  ABCBA
 ABCDCBA
ABCDEDCBA


14) Butterfly pattern
{ int n=5,i=1;
   ...>     for(i =1;i<=5;i++){
   ...>     for(int j=1;j<=i; j++){
   ...>
   ...>         System.out.print("*");}
   ...>     // for  spaces
   ...>         int spaces = 2*( n-i);             //key concept 
   ...>       for(int j=1;j<=spaces; j++){
   ...>     System.out.print(" ");
   ...>
   ...>     }
   ...>    
   ...>     for(int j=1;j<=i;j++){
   ...>         System.out.print("*");
   ...>     }
   ...>     System.out.println();
   ...> } // second half
   ...> for(i=n;i>=1;i--){
   ...>          for(int j=1;j<=i; j++){
   ...>              System.out.print("*");}
   ...>         int spaces = 2*( n-i);
   ...>              for(int j=1;j<=spaces; j++){
   ...>              System.out.print(" ");}
   ...>              for(int j=1;j<=i;j++){
   ...>                 System.out.print("*");
   ...>             }
   ...>             System.out.println();
   ...>     }
   ...> }
   ...>
*        *
**      **
***    ***
****  ****
**********
**********
****  ****
***    ***
**      **
*        *

15)
{  int n =5;
   ...>     for(int i=1;i<=n;i++){
   ...>         for(int j=1;j<=i;j++){
   ...>             System.out.print(j);
   ...>         }
   ...>
   ...>         //for spaces
   ...>         int spaces = 2*(n-i);
   ...>         for(int j=1;j<=spaces;j++){
   ...>              System.out.print(" ");
   ...>         }
   ...>
   ...>             for(int j=i;j>=1;j--){
   ...>                 System.out.print(j);
   ...>             }
   ...>             System.out.println();
   ...>
   ...>     }
   ...> }
1        1
12      21
123    321
1234  4321
1234554321c


16. Solid Rhombus
 {
   ...>     for(int i=1;i<=5;i++){
   ...>         for(int j=1;j<=5-i;j++){
   ...>              System.out.print(" ");
   ...>         }
   ...>         //stars
   ...>         for(int j=1;j<=5;j++){
   ...>              System.out.print("*");
   ...>         }
   ...>          System.out.println();
   ...>     }
   ...> }
   ...>
    *****
   *****
  *****
 *****
*****

17) Empty rhombus 

{
   ...>     for(int i=1;i<=5;i++){
   ...>         for(int j=1;j<=5-i;j++){
   ...>             System.out.print(" ");
   ...>         }
   ...>         for(int j=1;j<=5;j++){
   ...>         if(i==1 || j==1 || i ==5 || j == 5){
   ...>             System.out.print("*");}else{
   ...>                 System.out.print(" ");
   ...>             }
   ...>         }
   ...>
   ...>
   ...>          System.out.println();
   ...> }
   ...> }
    *****
   *   *
  *   *
 *   *
*****

18)Number Pyramid 
 {
   ...>      for(int i=1 ;i<=5;i++) {
   ...>          for(int j=1;j<=5-i;j++){
   ...>              System.out.print(" ");
   ...>         }
   ...>          for(int j=1;j<=i;j++){
   ...>              System.out.print(i + " ");
   ...>         }
   ...>          System.out.println();
   ...>     }
   ...> }
    1
   2 2
  3 3 3
 4 4 4 4
5 5 5 5 5

19) Palliandromic pattern 
 for(int i=1 ;i<=5;i++) {
   ...>     for(int j=1;j<=5-i;j++){
   ...>         System.out.print(" ");
   ...>     }
   ...>
   ...>     //First  Half numbers
   ...>     for(int j=i;j>=1;j--){
   ...>         System.out.print(j);
   ...>     }
   ...>
   ...>     //2nd Half
   ...>     for(int j=2;j<=i;j++){
   ...>          System.out.print(j);
   ...> }
   ...>      System.out.println();}
    1
   212
  32123
 4321234
543212345

20) Diamond Pattern
 {        //Upper Half
   ...>     for(int i=1;i<=4;i++){
   ...>         for(int j=1;j<=4-i;j++){
   ...>             System.out.print(" ");
   ...>         }
   ...>
   ...>        // stars
   ...>     for(int j=1;j<=2*i-1; j++){
   ...>             System.out.print("*");
   ...>         }
   ...>        System.out.println();
   ...>     }
   ...>     //Lower Half
   ...>      for(int i=4;i>=1;i--){
   ...>         for(int j=1;j<=4-i;j++){
   ...>              System.out.print(" ");
   ...>         }
   ...>      //stars
   ...>          for(int j=1;j<=2*i-1; j++){
   ...>              System.out.print("*");
   ...>         }
   ...>          System.out.println();
   ...>     }
   ...> }
   *
  ***
 *****
*******
*******
 *****
  ***
   *

21) {
   ...>     int n=5;
   ...>     for(int i=0;i<n;i++){
   ...>         for(int j=1;j<=n-i;j++){
   ...>             System.out.print("*");
   ...>         }
   ...>         for(int j=1;j<=2*i;j++){
   ...>             System.out.print(" ");
   ...>         }
   ...>           for(int j=1;j<=n-i;j++){
   ...>              System.out.print("*");
   ...> }
   ...>     System.out.println();
   ...> }
   ...>
   ...>     for(int i=1;i<=n;i++){
   ...>     for(int j=1;j<=i;j++){
   ...>          System.out.print("*");
   ...>     }
   ...>     for(int j=1;j<=2*(n-i);j++){
   ...>  System.out.print(" ");
   ...>     }
   ...>      for(int j=1;j<=i;j++){
   ...>          System.out.print("*");
   ...>     }
   ...>      System.out.println();
   ...>     }
   ...> }
Output:
**********
****  ****
***    ***
**      **
*        *
*        *
**      **
***    ***
****  ****
**********

22) //Empty Butterfly
class Main {
    public static void main(String[] args) {
     
        int n = 5;

        // Upper half
        for (int i = 1; i <= n; i++) {
            // Left wing
            for (int j = 1; j <= i; j++) {
                if (j == 1 || j == i) {
                    System.out.print("*");
                } else {
                    System.out.print(" ");
                }
            }

            // Middle spaces
            int spaces = 2 * (n - i);
            for (int j = 1; j <= spaces; j++) {
                System.out.print(" ");
            }

            // Right wing
            for (int j = 1; j <= i; j++) {
                if (j == 1 || j == i) {
                    System.out.print("*");
                } else {
                    System.out.print(" ");
                }
            }

            System.out.println();
        }

        // Lower half
        for (int i = n; i >= 1; i--) {
            // Left wing
            for (int j = 1; j <= i; j++) {
                if (j == 1 || j == i) {
                    System.out.print("*");
                } else {
                    System.out.print(" ");
                }
            }

            // Middle spaces
            int spaces = 2 * (n - i);
            for (int j = 1; j <= spaces; j++) {
                System.out.print(" ");
            }

            // Right wing
            for (int j = 1; j <= i; j++) {
                if (j == 1 || j == i) {
                    System.out.print("*");
                } else {
                    System.out.print(" ");
                }
            }

            System.out.println();
        }
    }
}


23) Print pascals triangle
Print Pascalâs Triangle.
    1
   1 1
  1 2 1
 1 3 3 1
1 4 6 4 1

24)Inverted odd pyramid 

 {  int n=5;
   ...>     for(i=0;i<n;i++){
   ...>        for(int j=1;j<=i;j++){
   ...>             System.out.print(" ");
   ...>         }
   ...>         for(int j=1;j<=(2*n-(2*i+1));j++){
   ...>             System.out.print("*");
   ...>         }
   ...>         for(int j=1;j<=i;j++){
   ...>             System.out.print(" ");
   ...>         }
   ...>         System.out.println();
   ...>     }
   ...> }
*********
 *******
  *****
   ***
    *


